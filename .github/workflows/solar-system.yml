name: Solar System Workflow
'on':
  workflow_dispatch: null
  push:
    branches:
      - main
      - feature/*
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: '${{ secrets.MONGO_PASSWORD }}'
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: ngtmike99/mongo-db:non-prod
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    services:  #Changed from containers
      mongo: #added
        image: 'mongo' #added
        env:
          MONGO_URI: 'mongodb://mongo:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        ports: #added
          - 27017:27017 #added

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js  #Repositioned
        uses: actions/setup-node@v3 #Repositioned
        with: #Repositioned
          node-version: '18' #Repositioned

      - name: Install Dependencies #Repositioned
        run: npm install #Repositioned

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'

      - name: Unit Testing
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml
  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - continue-on-error: true
        run: npm run coverage
      - uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
  docker:
    runs-on: ubuntu-latest
    needs:
      - code-coverage
      - unit-testing
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}